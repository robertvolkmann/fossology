#!/usr/bin/env bash
# FOSSology fo-installdeps script
# Copyright (C) 2008-2014 Hewlett-Packard Development Company, L.P.
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# version 2 as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# This script helps you install build and runtime dependencies on a system.
# It is NOT indented to replace package dependencies, it's just a tool to
# make testing the "upstream" build and install process. If you determine
# this script isn't installing something you think it should, consult
# the packaging metadata for the system in question as that is the
# canonical location for such info, then fix it there first and also
# update this file and the INSTALL document.

show_help() {
  cat <<EOF
Usage: fo-installdeps [options]
  -r or --runtime    : install runtime dependencies
  -b or --buildtime  : install buildtime dependencies
  -e or --everything : install all dependencies (default)
  -o or --offline : do not run composer installation
  -y                 : Automatic yes to prompts
  -h or --help       : this help text
EOF
}

source "$(dirname ${BASH_SOURCE[0]})/utils.sh"

#
# Don't show the -y option.  Should only be used for install testing, as using
# it without being careful can destroy your system.
#
YesOpt=''

#Default should be installation with internet connection
OFFLINE=''
EVERYTHING=''
RUNTIME=''
BUILDTIME=''

## Options parsing and setup
# parse options
OPTS=$(getopt -o rbeohy --long runtime,buildtime,everything,offline,help -n 'fo-installdeps' -- "$@")

if [[ $? -ne 0 ]]; then
   OPTS="--help"
fi

eval set -- "$OPTS"

# if no options or just -y then do everything
if [[ $OPTS == ' --' || $OPTS == ' -y --' ]]; then
  EVERYTHING=true
fi

while true; do
   case "$1" in
      -r|--runtime)     RUNTIME=true; shift;;
      -b|--buildtime)   BUILDTIME=true; shift;;
      -e|--everything)  EVERYTHING=true; shift;;
      -o|--offline)     OFFLINE=true; shift;;
      -y)               YesOpt='-y'; shift;;
      -h|--help)        show_help; exit;;
      --)               shift; break;;
      *)                echo "ERROR: option $1 not recognised"; exit 1;;
   esac
done

set -o errexit -o nounset -o pipefail

must_run_as_root
need_lsb_release

if [[ $EVERYTHING ]]; then
   echo "*** Installing both runtime and buildtime dependencies ***"
   RUNTIME=true
   BUILDTIME=true
fi

# figure out what distro we're on
DISTRO=$(lsb_release --id --short)
CODENAME=$(lsb_release --codename --short)

########################################################################

echo "install core dependencies"

if [[ $BUILDTIME ]]; then
   echo "*** Installing $DISTRO buildtime dependencies ***";
   case "$DISTRO" in
      Debian|Ubuntu|LinuxMint)
         echo "DB: Installing build essential....."
         apt-get $YesOpt install --no-install-recommends --no-install-suggests \
            build-essential \
            curl \
            git \
            libcunit1-dev \
            libglib2.0-dev \
            libpq-dev \
            libtext-template-perl \
            libxml2-dev
         case "$CODENAME" in
            jessie|trusty)
              apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                php5-cli libboost-program-options1.55-dev libboost-regex1.55-dev;;
            xenial)
              apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                php-cli libboost-program-options1.58-dev libboost-regex1.58-dev;;
            *)
              apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                php-cli libboost-program-options1.62-dev libboost-regex1.62-dev;;
         esac
         ;;
      Fedora)
         yum $YesOpt groupinstall "Development Tools"
         yum $YesOpt install \
            perl-Text-Template subversion \
            postgresql-devel file-devel \
            libxml2 \
            boost-devel
         ;;
      RedHatEnterprise*|CentOS)
         yum $YesOpt install \
            postgresql-devel \
            gcc make file libxml2 \
            perl-Text-Template subversion \
            boost-devel
         ;;
      *) echo "ERROR: distro not recognised, please fix and send a patch"; exit 1;;
   esac
fi

########################################################################

if [[ $RUNTIME ]]; then
   echo "*** Installing $DISTRO runtime dependencies ***";
   echo "*** For optional email notifications a Mail Transport Agent Must be ***";
   echo "*** installed. Consult with your system administrator. Or try ***";
   echo "*** apt-get install mail-transport-agent, pick one and install it***";
   case "$DISTRO" in
      Debian|Ubuntu|LinuxMint)
        echo "doing runtime"
         apt-get $YesOpt install --no-install-recommends --no-install-suggests \
            apache2 \
            binutils \
            dpkg-dev \
            git \
            libxml2 \
            php-gettext \
            postgresql \
            subversion \
            wget
         case "$CODENAME" in
            jessie|trusty)
               apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                 libapache2-mod-php5 php5 php5-pgsql php5-cli php5-curl \
                 libboost-program-options1.55.0 libboost-regex1.55.0 heirloom-mailx;;
            xenial)
               apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                 libapache2-mod-php php php-pgsql php-cli php-curl php-mbstring php-xml php-zip \
                 libboost-program-options1.58.0 libboost-regex1.58.0;;
            *)
               apt-get $YesOpt install --no-install-recommends --no-install-suggests \
                 libapache2-mod-php php php-pgsql php-cli php-curl php-mbstring php-xml php-zip \
                 libboost-program-options1.62.0 libboost-regex1.62.0 s-nail;;
         esac
         ;;
      Fedora)
         yum $YesOpt install postgresql-server httpd
         yum $YesOpt install \
            postgresql \
            php php-pear php-pgsql php-process php-xml php-mbstring\
            smtpdaemon \
            libxml2 \
            binutils mailx \
            sleuthkit

         # enable, possible init, and start postgresql
         /sbin/chkconfig postgresql on
         if [ ! -f /var/lib/pgsql/data/PG_VERSION ]; then
            /sbin/service postgresql initdb
         fi
         /sbin/service postgresql start

         echo "NOTE: unrar is not available in Fedora release $CODENAME,"
         echo "   please install from upstream sources."
         ;;
      RedHatEnterprise*|CentOS)
         yum $YesOpt install postgresql-server httpd
         yum $YesOpt install \
            postgresql \
            php php-pear php-pgsql php-process \
            smtpdaemon \
            file libxml2 \
            binutils mailx
         echo "NOTE: cabextract, sleuthkit, upx, and unrar are not"
         echo "    available in RHEL please install from upstream sources."
         ;;
      *) echo "ERROR: distro not recognised, please fix and send a patch"; exit 1;;
   esac
   
   if [[ $OFFLINE ]]; then
       echo "WARNING: composer is not installed, and the installer does not install it due to the offline switch"
       echo "Please run the equivalent of 'sudo ./utils/install_composer.sh'"
   else
       "$( dirname "$0" )/install_composer.sh"
   fi
fi

########################################################################
options=''
if [[ $BUILDTIME ]]; then
  options="$options -b"
fi

if [[ $RUNTIME ]]; then
  options="$options -r"
fi

if [[ $YesOpt ]]; then
  options="$options -y"
fi
mods_dir="$(dirname "$0")/../src/" ## get the directory where fo-installdeps resides

find "$mods_dir" -type f -name mod_deps -print0 | xargs -0 -I{} bash -cv "{} $options"

########################################################################
